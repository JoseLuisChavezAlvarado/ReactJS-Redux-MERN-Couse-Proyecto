{"ast":null,"code":"var _jsxFileName = \"/Users/joseluischavez/Desktop/ReactJS-Redux-MERN-Couse-Proyecto/src/context/proyectos/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTO, AGREGAR_PROYECTO } from '../../types';\nconst proyecto = [];\n\nconst ProyectoState = props => {\n  const proyectos = [{\n    id: 1,\n    nombre: 'Dise単o de sitio web'\n  }, {\n    id: 2,\n    nombre: 'Tienda virtual'\n  }, {\n    id: 3,\n    nombre: 'Intranet'\n  }];\n  const initialState = {\n    formulario: false,\n    proyectos: [{\n      id: 1,\n      nombre: 'Dise単o de sitio web'\n    }, {\n      id: 2,\n      nombre: 'Tienda virtual'\n    }, {\n      id: 3,\n      nombre: 'Intranet'\n    }]\n  };\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //SERIE DE FUNCIONES PARA EL CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //OBTENER LOS PROYECTOS\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTO,\n      payload: proyectos\n    });\n  };\n\n  const agregarProyecto = proyecto => {\n    proyecto.id = uuidv4();\n    dispatch({\n      type: AGREGAR_PROYECTO,\n      payload: proyecto\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/Users/joseluischavez/Desktop/ReactJS-Redux-MERN-Couse-Proyecto/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoContext","proyectoReducer","v4","uuidv4","FORMULARIO_PROYECTO","OBTENER_PROYECTO","AGREGAR_PROYECTO","proyecto","ProyectoState","props","proyectos","id","nombre","initialState","formulario","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,gBAAhD,QAAwE,aAAxE;AAEA,MAAMC,QAAQ,GAAG,EAAjB;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE3B,QAAMC,SAAS,GAAG,CACd;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,MAAM,EAAE;AAAjB,GADc,EAEd;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,MAAM,EAAE;AAAjB,GAFc,EAGd;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,MAAM,EAAE;AAAjB,GAHc,CAAlB;AAMA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,UAAU,EAAE,KADK;AAEjBJ,IAAAA,SAAS,EAAE,CACP;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,MAAM,EAAE;AAAjB,KADO,EAEP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,MAAM,EAAE;AAAjB,KAFO,EAGP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,MAAM,EAAE;AAAjB,KAHO;AAFM,GAArB;AASA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACE,eAAD,EAAkBY,YAAlB,CAApC,CAjB2B,CAmB3B;;AACA,QAAMI,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH,GAJD,CApB2B,CA0B3B;;;AACA,QAAMe,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,gBADD;AAELe,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMW,eAAe,GAAGd,QAAQ,IAAI;AAChCA,IAAAA,QAAQ,CAACI,EAAT,GAAcR,MAAM,EAApB;AACAa,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,gBADD;AAELc,MAAAA,OAAO,EAAEb;AAFJ,KAAD,CAAR;AAIH,GAND;;AAQA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,SAAS,EAAEK,KAAK,CAACL,SADd;AAEHI,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAFf;AAGHG,MAAAA,iBAHG;AAIHE,MAAAA,gBAJG;AAKHE,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOQZ,KAAK,CAACa,QAPd,CADJ;AAYH,CAtDD;;AAwDA,eAAed,aAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTO, AGREGAR_PROYECTO } from '../../types';\n\nconst proyecto = [];\n\nconst ProyectoState = props => {\n\n    const proyectos = [\n        { id: 1, nombre: 'Dise単o de sitio web' },\n        { id: 2, nombre: 'Tienda virtual' },\n        { id: 3, nombre: 'Intranet' }\n    ];\n\n    const initialState = {\n        formulario: false,\n        proyectos: [\n            { id: 1, nombre: 'Dise単o de sitio web' },\n            { id: 2, nombre: 'Tienda virtual' },\n            { id: 3, nombre: 'Intranet' }\n        ]\n    }\n\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n    //SERIE DE FUNCIONES PARA EL CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        });\n    }\n\n    //OBTENER LOS PROYECTOS\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTO,\n            payload: proyectos\n        });\n    }\n\n    const agregarProyecto = proyecto => {\n        proyecto.id = uuidv4();\n        dispatch({\n            type: AGREGAR_PROYECTO,\n            payload: proyecto\n        });\n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto\n            }}>{props.children}\n        </proyectoContext.Provider>\n    )\n\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}