{"ast":null,"code":"var _jsxFileName = \"/Users/joseluischavez/Desktop/ReactJS-Redux-MERN-Couse-Proyecto/src/components/tareas/FormTarea.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    proyecto\n  } = proyectosContext;\n  const tareasContext = useContext(tareaContext);\n  const {\n    agregarTarea,\n    errorTarea,\n    getTareasProyecto,\n    setErrorTarea,\n    tareaSeleccionada\n  } = tareasContext;\n  const [tarea, setTarea] = useState({\n    nombre: ''\n  });\n  useEffect(() => {\n    if (tareaSeleccionada !== null) {\n      setTarea(tareaSeleccionada);\n    } else {\n      setTarea({\n        nombre: ''\n      });\n    }\n  }, [tareaSeleccionada]);\n  const {\n    nombre\n  } = tarea;\n  if (!proyecto) return null;\n  const [proyectoSeleccionado] = proyecto;\n\n  const handleChange = e => {\n    setTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //VALIDAR\n\n    if (nombre === '') {\n      setErrorTarea();\n      return;\n    } //AGREGAR NUEVA TAREA\n\n\n    tarea.proyectoId = proyectoSeleccionado.id;\n    tarea.estado = false;\n    agregarTarea(tarea); //OBTENER TAREAS\n\n    getTareasProyecto(proyectoSeleccionado.id); //REINICAR FORM\n\n    setTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"nombre\",\n    value: nombre,\n    className: \"input-text\",\n    onChange: handleChange,\n    placeholder: \"Nombre Tarea...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: tareaSeleccionada !== null ? 'Editar Tarea' : 'Agregar Tarea',\n    className: \"btn btn-primario bt-submit btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }))), errorTarea ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, \"El nombre de la tarea es obligatorio\") : null);\n};\n\nexport default FormTarea;","map":{"version":3,"sources":["/Users/joseluischavez/Desktop/ReactJS-Redux-MERN-Couse-Proyecto/src/components/tareas/FormTarea.js"],"names":["React","useContext","useEffect","useState","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","agregarTarea","errorTarea","getTareasProyecto","setErrorTarea","tareaSeleccionada","tarea","setTarea","nombre","proyectoSeleccionado","handleChange","e","target","name","value","handleSubmit","preventDefault","proyectoId","id","estado"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB,QAAMC,gBAAgB,GAAGN,UAAU,CAACG,eAAD,CAAnC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeD,gBAArB;AAEA,QAAME,aAAa,GAAGR,UAAU,CAACI,YAAD,CAAhC;AACA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA,iBAA5B;AAA+CC,IAAAA,aAA/C;AAA8DC,IAAAA;AAA9D,MAAoFL,aAA1F;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AAC/Bc,IAAAA,MAAM,EAAE;AADuB,GAAD,CAAlC;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,iBAAiB,KAAK,IAA1B,EAAgC;AAC5BE,MAAAA,QAAQ,CAACF,iBAAD,CAAR;AACH,KAFD,MAEO;AACHE,MAAAA,QAAQ,CAAC;AACLC,QAAAA,MAAM,EAAE;AADH,OAAD,CAAR;AAGH;AACJ,GARQ,EAQN,CAACH,iBAAD,CARM,CAAT;AAUA,QAAM;AAAEG,IAAAA;AAAF,MAAaF,KAAnB;AAEA,MAAI,CAACP,QAAL,EAAe,OAAO,IAAP;AAEf,QAAM,CAACU,oBAAD,IAAyBV,QAA/B;;AAEA,QAAMW,YAAY,GAAGC,CAAC,IAAI;AACtBJ,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFrB,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF,GADsB,CAGtB;;AACA,QAAIR,MAAM,KAAK,EAAf,EAAmB;AACfJ,MAAAA,aAAa;AACb;AACH,KAPqB,CAStB;;;AACAE,IAAAA,KAAK,CAACW,UAAN,GAAmBR,oBAAoB,CAACS,EAAxC;AACAZ,IAAAA,KAAK,CAACa,MAAN,GAAe,KAAf;AACAlB,IAAAA,YAAY,CAACK,KAAD,CAAZ,CAZsB,CActB;;AACAH,IAAAA,iBAAiB,CAACM,oBAAoB,CAACS,EAAtB,CAAjB,CAfsB,CAiBtB;;AACAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,MAAM,EAAE;AADH,KAAD,CAAR;AAIH,GAtBD;;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEO,YADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,KAAK,EAAEP,MAHX;AAII,IAAA,SAAS,EAAC,YAJd;AAKI,IAAA,QAAQ,EAAEE,YALd;AAMI,IAAA,WAAW,EAAC,iBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAYI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAEL,iBAAiB,KAAK,IAAtB,GAA6B,cAA7B,GAA8C,eAFzD;AAGI,IAAA,SAAS,EAAC,sCAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,CADJ,EAsBQH,UAAU,gBACJ;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADI,GAEJ,IAxBd,CADJ;AA8BH,CA3FD;;AA6FA,eAAeL,SAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    const tareasContext = useContext(tareaContext);\n    const { agregarTarea, errorTarea, getTareasProyecto, setErrorTarea, tareaSeleccionada } = tareasContext;\n\n    const [tarea, setTarea] = useState({\n        nombre: ''\n    });\n\n    useEffect(() => {\n        if (tareaSeleccionada !== null) {\n            setTarea(tareaSeleccionada);\n        } else {\n            setTarea({\n                nombre: ''\n            })\n        }\n    }, [tareaSeleccionada])\n\n    const { nombre } = tarea;\n\n    if (!proyecto) return null;\n\n    const [proyectoSeleccionado] = proyecto;\n\n    const handleChange = e => {\n        setTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        //VALIDAR\n        if (nombre === '') {\n            setErrorTarea();\n            return;\n        }\n\n        //AGREGAR NUEVA TAREA\n        tarea.proyectoId = proyectoSeleccionado.id;\n        tarea.estado = false;\n        agregarTarea(tarea);\n\n        //OBTENER TAREAS\n        getTareasProyecto(proyectoSeleccionado.id);\n\n        //REINICAR FORM\n        setTarea({\n            nombre: ''\n        })\n\n    }\n\n\n\n    return (\n        <div className='formulario'>\n            <form\n                onSubmit={handleSubmit}>\n                <div className='contenedor-input'>\n                    <input\n                        type='text'\n                        name='nombre'\n                        value={nombre}\n                        className='input-text'\n                        onChange={handleChange}\n                        placeholder='Nombre Tarea...' />\n                </div>\n\n                <div className='contenedor-input'>\n                    <input\n                        type='submit'\n                        value={tareaSeleccionada !== null ? 'Editar Tarea' : 'Agregar Tarea'}\n                        className='btn btn-primario bt-submit btn-block' />\n                </div>\n            </form>\n\n            {\n                errorTarea\n                    ? <p className='mensaje error'>El nombre de la tarea es obligatorio</p>\n                    : null\n            }\n\n        </div>\n    );\n}\n\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}